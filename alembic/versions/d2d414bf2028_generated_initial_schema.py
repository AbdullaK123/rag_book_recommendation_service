"""Generated initial schema

Revision ID: d2d414bf2028
Revises: 
Create Date: 2025-04-13 12:11:49.099465

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'd2d414bf2028'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('author', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('isbn', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('publication_year', sa.Integer(), nullable=True),
    sa.Column('publisher', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('page_count', sa.Integer(), nullable=True),
    sa.Column('average_rating', sa.Float(), nullable=True),
    sa.Column('ratings_count', sa.Integer(), nullable=False),
    sa.Column('cover_image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('embedding', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_books_author'), 'books', ['author'], unique=False)
    op.create_index(op.f('ix_books_created_at'), 'books', ['created_at'], unique=False)
    op.create_index(op.f('ix_books_isbn'), 'books', ['isbn'], unique=True)
    op.create_index(op.f('ix_books_title'), 'books', ['title'], unique=False)
    op.create_table('categories',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_categories_created_at'), 'categories', ['created_at'], unique=False)
    op.create_index(op.f('ix_categories_name'), 'categories', ['name'], unique=True)
    op.create_table('users',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('bio', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('book_category_links',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('book_id', 'category_id')
    )
    op.create_table('book_recommendations',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_viewed', sa.Boolean(), nullable=False),
    sa.Column('is_dismissed', sa.Boolean(), nullable=False),
    sa.Column('recommendation_source', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('recommendation_metadata', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('viewed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_book_recommendations_book_id'), 'book_recommendations', ['book_id'], unique=False)
    op.create_index(op.f('ix_book_recommendations_created_at'), 'book_recommendations', ['created_at'], unique=False)
    op.create_index(op.f('ix_book_recommendations_recommendation_source'), 'book_recommendations', ['recommendation_source'], unique=False)
    op.create_index(op.f('ix_book_recommendations_user_id'), 'book_recommendations', ['user_id'], unique=False)
    op.create_table('user_book_interactions',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('interaction_type', sa.Enum('VIEW', 'LIKE', 'DISLIKE', 'BOOKMARK', 'RATE', 'REVIEW', 'RECOMMEND', name='interactiontype'), nullable=False),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('review_text', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_book_interactions_book_id'), 'user_book_interactions', ['book_id'], unique=False)
    op.create_index(op.f('ix_user_book_interactions_created_at'), 'user_book_interactions', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_book_interactions_user_id'), 'user_book_interactions', ['user_id'], unique=False)
    op.create_table('user_preferences',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_preferences', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('preferred_language', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('min_page_count', sa.Integer(), nullable=True),
    sa.Column('max_page_count', sa.Integer(), nullable=True),
    sa.Column('min_publication_year', sa.Integer(), nullable=True),
    sa.Column('max_publication_year', sa.Integer(), nullable=True),
    sa.Column('min_rating', sa.Float(), nullable=True),
    sa.Column('custom_preferences', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_preferences_created_at'), 'user_preferences', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_preferences_user_id'), 'user_preferences', ['user_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_preferences_user_id'), table_name='user_preferences')
    op.drop_index(op.f('ix_user_preferences_created_at'), table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index(op.f('ix_user_book_interactions_user_id'), table_name='user_book_interactions')
    op.drop_index(op.f('ix_user_book_interactions_created_at'), table_name='user_book_interactions')
    op.drop_index(op.f('ix_user_book_interactions_book_id'), table_name='user_book_interactions')
    op.drop_table('user_book_interactions')
    op.drop_index(op.f('ix_book_recommendations_user_id'), table_name='book_recommendations')
    op.drop_index(op.f('ix_book_recommendations_recommendation_source'), table_name='book_recommendations')
    op.drop_index(op.f('ix_book_recommendations_created_at'), table_name='book_recommendations')
    op.drop_index(op.f('ix_book_recommendations_book_id'), table_name='book_recommendations')
    op.drop_table('book_recommendations')
    op.drop_table('book_category_links')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_categories_name'), table_name='categories')
    op.drop_index(op.f('ix_categories_created_at'), table_name='categories')
    op.drop_table('categories')
    op.drop_index(op.f('ix_books_title'), table_name='books')
    op.drop_index(op.f('ix_books_isbn'), table_name='books')
    op.drop_index(op.f('ix_books_created_at'), table_name='books')
    op.drop_index(op.f('ix_books_author'), table_name='books')
    op.drop_table('books')
    # ### end Alembic commands ###
